;--
EXT,XXX - Select Track

/// Controls (Available After Track Selected)
# - Fast Forward
* - Rewind
0 - Play Pause
1 - Restart
2 - Volume Down
3 - Volume Up
5 - Track Previous
6 - Track Next
4 - Toggle Repeat
7 - Toggle Playlist
9 - Menu
--;

[music]
exten => _X!,1,Gosub(play,1(${EXTEN}))

exten => init,1,NoOp()
 same => n,Set(WORKDIR=${ASTDATADIR}/sounds/music)
 same => n,Set(CMDTRIM=tr -d "\r\n")
 same => n,Return()

exten => menu,1,NoOp()
 same => n,Gosub(init,1)
 same => n,Gosub(sub-update-title,1(Menu))
 same => n,Set(ARRAY(CONTROL,TRIES)=1,0)
 same => n,Set(MAX=${SHELL(ls -v "${WORKDIR}" | tail -1 | sed -r "s/(\d*)\..*/\1/" | ${CMDTRIM})})
 same => n(wait),Gosub(sub-play-beep,1)
 same => n,Set(ARRAY(TRACK,TRACKEXISTS)=)
 same => n,While($[${LEN(0${TRACK})}<${LEN(0${MAX})}])
 same => n,  Answer()
 same => n,  WaitDigit(${IF($["${TRACKEXISTS}"=="YES"]?0.5:60)},0123456789#)
 same => n,  ExecIf($["${WAITDIGITSTATUS}"!="DTMF"]?ExitWhile())
 same => n,  ExecIf($["${WAITDIGITRESULT}"=="#"]?ExitWhile())
 same => n,  Set(TRACK=${TRACK}${WAITDIGITRESULT})
 same => n,  Gosub(sub-track-exists,1(${TRACK}))
 same => n,  ExecIf($["${TRACKEXISTS}"=="NO"]?ExitWhile())
 same => n,EndWhile()
 same => n,GosubIf($["${TRACKEXISTS}"=="YES"]?play,1(${TRACK}))
 same => n,Set(TRIES=$[${TRIES}+1])
 same => n,ExecIf($[${TRIES}>2]?Hangup())
 same => n,Goto(wait)

exten => play,1,NoOp()
 same => n,Gosub(init,1)
 same => n,Set(TRACK=${ARG1})
 same => n,Set(FILE=${SHELL(ls "${WORKDIR}" | grep "^${TRACK}\..*" | sed -r "s/(.*)\..*/\1/" | ${CMDTRIM})})
 same => n,GosubIf($["${FILE}"==""]?sub-error,1)
 same => n,Verbose(Playing: ${FILE})
 same => n,Gosub(sub-update-title,1(${FILE}))
 same => n,Goto(${IF($[0${CONTROL}]?control:locked)},1)

exten => locked,1,NoOp()
 same => n,Playback(music/${FILE})
 same => n,Hangup()

exten => control,1,NoOp()
 same => n(restart),Set(CPLAYBACKOFFSET=)
 same => n(play),ControlPlayback(music/${FILE},5000,#,*,02345679,,1,o(0${CPLAYBACKOFFSET}))
 same => n,GosubIf($["${CPLAYBACKSTATUS}"=="SUCCESS"&0${PLAYLIST}]?sub-update-track,1(+))
 same => n,GotoIf($["${CPLAYBACKSTATUS}"=="SUCCESS"&0${REPEAT}]?1)
 same => n,ExecIf($["${CPLAYBACKSTATUS}"!="USERSTOPPED"]?Set(CPLAYBACKSTOPKEY=))
 same => n,GosubIf($["${CPLAYBACKSTOPKEY}"=="0"]?sub-pause,1)
 same => n,GosubIf($["${CPLAYBACKSTOPKEY}"=="2"]?sub-update-volume,1(-))
 same => n,GosubIf($["${CPLAYBACKSTOPKEY}"=="3"]?sub-update-volume,1(+))
 same => n,GosubIf($["${CPLAYBACKSTOPKEY}"=="4"]?sub-toggle-repeat,1)
 same => n,GosubIf($["${CPLAYBACKSTOPKEY}"=="5"]?sub-update-track,1(-))
 same => n,GosubIf($["${CPLAYBACKSTOPKEY}"=="6"]?sub-update-track,1(+))
 same => n,GosubIf($["${CPLAYBACKSTOPKEY}"=="7"]?sub-toggle-playlist,1)
 same => n,GotoIf($["${CPLAYBACKSTOPKEY}"=="9"]?menu,1)
 same => n,GotoIf($["${CPLAYBACKSTOPKEY}"!=""]?play)
 same => n,Goto(menu,1)

exten => sub-pause,1,NoOp()
 same => n(wait),WaitDigit(60,0145679)
 same => n,GotoIf($["${WAITDIGITSTATUS}"=="TIMEOUT"]?wait)
 same => n,GosubIf($["${WAITDIGITRESULT}"=="4"]?sub-toggle-repeat,1)
 same => n,GosubIf($["${WAITDIGITRESULT}"=="5"]?sub-update-track,1(-))
 same => n,GosubIf($["${WAITDIGITRESULT}"=="6"]?sub-update-track,1(+))
 same => n,GosubIf($["${WAITDIGITRESULT}"=="7"]?sub-toggle-playlist,1)
 same => n,GotoIf($["${WAITDIGITRESULT}"=="1"]?control,restart)
 same => n,GotoIf($["${WAITDIGITRESULT}"=="0"]?control,play)
 same => n,GotoIf($["${WAITDIGITRESULT}"=="9"]?menu,1)
 same => n,Goto(wait)

exten => sub-update-volume,1,NoOp()
 same => n,Set(ARRAY(OP,V)=${ARG1},$[${VOLUME(TX)}+0])
 same => n,Set(STEPS=-50|-18|-9|-3|0|2|4|8|50)
 same => n,Set(STEPQTY=${FIELDQTY(STEPS,|)})
 same => n,Set(STEPNUMCURRENT=${FIELDNUM(STEPS,|,${V})})
 same => n,Set(STEPNUMNEW=$[${STEPNUMCURRENT}${OP}1])
 same => n,Set(OUTOFRANGE=$[${STEPNUMNEW}<1|${STEPNUMNEW}>${STEPQTY}])
 same => n,GosubIf($[${OUTOFRANGE}]?sub-play-beep,1)
 same => n,Set(VOLUME(TX)=${CUT(STEPS,|,${IF($[${OUTOFRANGE}]?${STEPNUMCURRENT}:${STEPNUMNEW})})})
 same => n,Return()

exten => sub-update-track,1,NoOp()
 same => n,Set(ARRAY(OP,OPOP)=${ARG1},${IF($["${ARG1}"=="+"]?-:+)})
 same => n,Set(TRACK=$[${TRACK}${OP}1])
 same => n,Gosub(sub-track-exists,1(${TRACK}))
 same => n,GotoIf($["${TRACKEXISTS}"=="YES"]?play)
 same => n,GotoIf($[0${PLAYLIST}&0${REPEAT}]?:menu,1)
 same => n,While(1)
 same => n,  Gosub(sub-track-exists,1($[${TRACK}${OPOP}1]))
 same => n,  ExecIf($["${TRACKEXISTS}"!="YES"]?ExitWhile())
 same => n,  Set(TRACK=$[${TRACK}${OPOP}1])
 same => n,EndWhile()
 same => n(play),Gosub(play,1(${TRACK}))

exten => sub-toggle-repeat,1,NoOp()
 same => n,Set(REPEAT=${IF($[0${REPEAT}]?0:1)})
 same => n,GosubIf($[${REPEAT}]?sub-play-beep,1)
 same => n,Return()

exten => sub-toggle-playlist,1,NoOp()
 same => n,Set(PLAYLIST=${IF($[0${PLAYLIST}]?0:1)})
 same => n,GosubIf($[${PLAYLIST}]?sub-play-beep,1)
 same => n,Return()

exten => sub-play-beep,1,NoOp()
 same => n,Set(VOL=${VOLUME(TX)})
 same => n,Set(VOLUME(TX)=0)
 same => n,Playback(beep,skip)
 same => n,Set(VOLUME(TX)=${VOL})
 same => n,Return()

exten => sub-track-exists,1,NoOp()
 same => n,Set(CMDA=ls "${WORKDIR}" | grep -q "^${ARG1}\..*"   && printf "YES"   || printf "NO")
 same => n,Set(CMDB=ls "${WORKDIR}" | grep -q "^${ARG1}.*\..*" && printf "MAYBE" || printf "NO")
 same => n,Set(TRACKEXISTS=${SHELL(${CMDA})})
 same => n,Set(TRACKEXISTS=${IF($["${TRACKEXISTS}"=="YES"]?${TRACKEXISTS}:${SHELL(${CMDB})})})
 same => n,Return()

exten => sub-update-title,1,NoOp()
 same => n,Set(CONNECTEDLINE(name,i)=Music ${ARG1})
 same => n,Set(CONNECTEDLINE(num)=${CALLERID(dnid)})
 same => n,Return()

exten => sub-error,1,NoOp()
 same => n,Playback(silence/1&an-error-has-occurred&pls-try-call-later)
 same => n,Hangup()